视频同步中90KHz相关概念：
1、90KHz是TS标准要求的, 90K*300=27MHz是所有时钟、定时器的根本。
2、90KHz是用于视频同步的时间尺度（timescale），就是每秒90K个时钟TICK。为什么采用90K呢？目前视频的帧频率主要有25fps、29.97fps、30fps等，而90K刚好是他们的倍数，所以就采用了90K.
3、关于时间戳的计算：对于语音来讲，时间戳是封包间隔和采样速率的乘积的递增，比如，如果封包时间是20ms，而采样率是8Khz，则每一块的时间递增是160，即使由于某些原因包被丢弃。另外要注意的是，真实的采样速率和预定的采样速率有一些小的变化，但是发送一般没有可靠的办法察觉这些区别。对于视频来讲，时间戳的生成依赖于应用程序是否能够分辨其帧速率，则时间戳可以使用一个固定的速率增加，如对于30fps的视频，时间戳就每一帧增加3000(90000/30)，而对于25fps的视频就增加3600(90000/25)，如果一个帧被几个RTP包携带，则这些包应当有相同的时间戳。而如果应用程序并不能识别帧数，或者采样频率是变化的，现在很多编码器都是这样做的。那么时间戳就必须由系统时钟来获得，如gettimeofday（）；
4、标准规定在原始音频和视频流中,PTS的间隔不能超过0.7s，出现在TS包头的PCR间隔不能超过0.1s。
TS音视频同步及PCR相关计算

题记：时间戳将每一秒分成90000份，即将每一毫秒分成90份—---—90kHZ
MPEG2系统用于视音频同步以及系统时钟恢复的时间标签分别在ES，PES和TS这3个层次中。
在TS 层, TS头信息包含了节目时钟参考PCR(Program Clock Reference),用于恢复出与编码端一致的系统时序时钟STC(System Time Clock)。     
在PES层, 在PES头信息里包含有表示时间戳PTS(Presentation Time Stamp)和解码时间戳DTS(Decoding Time Stamp);
在ES 层, 与同步有关的主要是视频缓冲验证VBV(Video Buffer Verifier),用以防止解码器的缓冲器出现上溢或者下溢;

同步机制
编码器
系统时钟STC:
    编码器中有一个系统时钟(其频率是27MHz),
    此时钟用来产生指示音视频的正确显示和解码的时间戳,
    同时可用来指示在采样过程中系统时钟本身的瞬时值
PCR(Program Clock Reference):
    指示系统时钟本身的瞬时值的时间标签称为节目参考时钟标签(PCR)。
PCR的插入必须在PCR字段的最后离开复用器的那一时刻,
    同时把27MHz系统时钟的采样瞬时值作为PCR字段插入到相应的PCR域。
    它是放在TS包头的自适应区中传送.
27MHz的系统时钟STC经波形整理后分成两路:
    PCR_ext (9bits ), 由27MHz脉冲直接触发计数器生成扩展域.
    PCR_base(33bits), 经300分频器分频成90kHz脉冲送入一个33位计数器生成90kHz基值, 用于和PTS/DTS比较，产生解码和显示所需要的同步信号.
    这两部分被置入PCR域，共同组成42位的PCR.

输入到T-STD解码器的第i个字节的PCR值:
    PCR(i) = PCR_base(i)*300 + PCR_ext(i) 
    i: 包含program_clock_reference_base域的最后一个比特的字节号.

    PCR_base(i) = ((system_clock_frequency * t(i)) / 300) % 2^33
    PCR_ext(i)  = ((system_clock_frequency * t(i)) / 1   ) % 300

t(i): 字节i的编码时间.

例如:
    时间"03:02:29.012"的PCR计算如下:
    03:02:29.012 = ((3 * 60) + 2) * 60 + 29.012 = 10949.012s
    PCR_base = ((27 000 000 * 10949.012) / 300) % 2^33 = 98 541 080
    PCR_ext  = ((27 000 000 * 10949.012) / 1  ) % 300  = 0 
    PCR = 98 541 080 * 300 + 0 = 295 623 324 000

逆推一个
假设PCR   = 1209740011800
PCR_base  = 1209740011800 / 300 = 4032466706
PCR_ext  = 1209740011800 % 300  = 0
t  = PCR_base * 300/27000000 = 44805.185622222222222222222222222
time:  t/3600: ( t-(t/3600))/60: t-( t-(t/3600))/60 = 12:26:45.185622222222222222222222222

PCR_base的作用:
  a. 与PTS和DTS作比较, 当二者相同时, 相应的单元被显示或者解码.
  b. 在解码器切换节目时, 提供对解码器PCR计数器的初始值,
     以让该PCR值与PTS、DTS最大可能地达到相同的时间起点.

PCR_ext的作用:
  通过解码器端的锁相环路修正解码器的系统时钟, 使其达到和编码器一致的27MHz.


PTS(Presentation Time Stamp):
    指示音视频显示时间的时间戳称为显示时间戳(PTS);
    PTS域为33bits, 是对系统时钟的300分频的时钟的计数值.
    它被编码成为3个独立的字段: PTS[32..30][29..15][14..0]
    表示此分组中第一个访问单元在系统目标解码器中的预定显示时间.


PTS值为:
    PTS(k) = ((system_clock_frequency * TPn(k)) / 300) % 2^33

TPn(k): 表示单元Pn(k)的表示时间.
以上一个PCR:12:26:45.185622222222222222222222222为基准
当前IDR帧（poc=0）的PTS为：4032475706
time = PTS*300/27000000 = 44805.285622222222222222222222222 = 12:26:45.285622222222222222222222222
当期poc=1 的PTS为：4032479306
time1 = PTS*300/27000000 =44805.365622222222222222222222222 = 12:26:45.325622222222222222222222222222
time1-time2 = 0.04
即0.04s 播放一帧   一秒播放 25帧
我们可以看到两个PTS之间相差3600 40ms播放一帧  则 3600 = 40*90(90hz) = 3600

DTS(Decoding Time Stamp):
    指示音视频的解码时间戳称为解码时间戳(DTS),
    DTS域为33bits,编码成为3个独立的字段: DTS[32..30][29..15][14..0]
    表示此分组中第一个访问单元在系统目标解码器中的预定解码时间.

DTS值为:
    DTS(j) = ((system_clock_frequency * TDn(j)) / 300) % 2^33
    TDn(j): 第n个ES流的第j个存取单元An(j)的解码时间.

    DTS就视频来说,因为视频编码的时候用到了双向预测,
    一个图像单元被解出,并非马上就被显示,可能在存储器中留一段时间,作为其余图像单元的解码参考,
    在被参考完毕后,才被显示.

音频PTS:
    针对音频和视频的同步显示，MPEG提出了一个音频PTS.
    由于声音没有用到双向预测，它的解码次序就是它的显示次序，故它只有PTS.

VBV_delay:
    视频流延时值,
    在解码时利用视频流缓冲区把视频流缓存到相应的vbv_delay时间后,
    再启动解码器解码、显示、实现音视频的同步.
    VBV_delay存在于视频ES的头部，长度为16bit.

解码器
    首先,  解析PCR, 重建和编码器同步的27MHz系统时钟, 恢复27MHz系统时钟后;
    再,    通过VBV_delay(视频流延时值)的数值来确定解码的开始;
    之后,  利用PES流中解码时间戳(DTS)和显示时间戳(PTS)来确定解码和显示的次序. 用PCR来对系统时钟进行修正.

解码器同步算法总结如下:
(1).  解码器从输入码流的包头中解出时间信息PCR送入到系统时间时钟恢复电路;
      系统时间时钟恢复电路在接收到每一个新的PCR时，进行本地系统时间时钟恢复和锁相。
(2).  解复用器后，从PES包头中解出显示时间标签PTS和解码时间标签DTS，并送入到基本流解码器中。
(3).  基本流解码器在接收到新的PTS/DTS后，存入对应的FIFO(先进先处存储器)中进行管理；
      对于没有PTS/DTS的显示单元，需要对其时间标签进行插值，并送入到FIFO中管理。
(4).  每一显示单元开始解码前，用其对应的DTS与STC进行比较，当STC与DTS相等时开始解码；
(5).  每一显示单元开始显示前，用其对应的PTS与STC进行比较，当STC与PTS相等时开始显示。

三、失同步处理
27 MHz系统时钟经过300分频后，得到本地的33 bits PCR_Base, 该时钟与寄存器中当前图像的PTS/DTS进行比较,
系统软件根据比较结果做出相应的处理:
(1).  若当前的PTS/DTS比PCR计数器的值小于半帧以上，即PTS_Base≤-ΔPTS/2,
      此时说明系统解码过慢，解码器处于失步状态，应根据该帧的结构做出相应的同步调整；
(2).  若当前的PTS/DTS比PCR计数器的值在半帧时间以内，
      我们认为此时系统解码正常，立即显示/解码当前帧；
(3).  若当前的PTS/DTS大于PCR计数器的值，则此时解码器稍快，
      在这种情况下，只需等到PCR与PTS/DTS相等时，就可显示/解码。

附注: 
上面讲的都是解码器的同步机制，
对于转码来说，如ffmpeg等并不是这么做的。